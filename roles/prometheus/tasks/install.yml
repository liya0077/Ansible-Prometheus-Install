---
- name: Print which environment we're deploying to
  debug:
    msg: "Deploying to {{ env }} environment"

- name: Ensure prometheus group exists
  ansible.builtin.group:
    name: "{{ prometheus_group }}"
    state: present

- name: Ensure prometheus user exists
  ansible.builtin.user:
    name: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    shell: /sbin/nologin
    system: yes
    create_home: no

- name: Create required directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: "0755"
  loop:
    - "{{ prometheus_config_dir }}"
    - "{{ prometheus_data_dir }}"

- name: Download prometheus tarball
  ansible.builtin.get_url:
    url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    dest: "/tmp/prometheus.tar.gz"

- name: Extract prometheus
  ansible.builtin.unarchive:
    src: "/tmp/prometheus.tar.gz"
    dest: "/tmp/"
    remote_src: yes

- name: Copy prometheus and promtool binaries
  ansible.builtin.copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}"
    dest: "{{ prometheus_install_dir }}/{{ item }}"
    mode: '0755'
    remote_src: yes
  loop:
    - prometheus
    - promtool

- name: Copy consoles and console_libraries
  ansible.builtin.copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}"
    dest: "{{ prometheus_config_dir }}/{{ item }}"
    remote_src: yes
    mode: "0755"
  loop:
    - consoles
    - console_libraries

- name: Deploy Prometheus configuration using Jinja2 template
  ansible.builtin.template:
    src: prometheus.yml.j2
    dest: "{{ prometheus_config_dir }}/prometheus.yml"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: "0644"
  notify: restart prometheus

- name: Deploy Prometheus systemd service
  ansible.builtin.copy:
    dest: "{{ prometheus_service_path }}"
    content: |
      [Unit]
      Description=Prometheus Monitoring
      Wants=network-online.target
      After=network-online.target

      [Service]
      User={{ prometheus_user }}
      Group={{ prometheus_group }}
      Type=simple
      ExecStart={{ prometheus_install_dir }}/prometheus \
        --config.file={{ prometheus_config_dir }}/prometheus.yml \
        --storage.tsdb.path={{ prometheus_data_dir }} \
        --web.console.templates={{ prometheus_config_dir }}/consoles \
        --web.console.libraries={{ prometheus_config_dir }}/console_libraries \
        --web.listen-address=:{{ prometheus_port }}

      [Install]
      WantedBy=multi-user.target
    mode: "0644"
  notify: restart prometheus

- name: Reload systemd
  ansible.builtin.systemd:
    daemon_reload: yes
